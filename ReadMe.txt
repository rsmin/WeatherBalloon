//Weather Balloon
//Xiaodong Meng, 2017-08-31

//For interview purpose only. The code answers to question on https://gist.github.com/dbousamra/66cab2034e4f212553fb

//The code is build with SBT using Scala of version 2.12.3. To compile the source code, plase ensure that the newest version of java SDK, SBT and scala are installed on your computer. It also contains a complied jar for running.


//The code contains three applications which are DataGen, Static and NormalUnit.

//DataGen generates weather balloon log records and saved in a local file
//Static computes the statistics for the data in the file generated by DataGen
//NormalUnit converts the records into specified unit from the generated balloon log file

//There is examples of run each application in the jars

//example 1, this command gives a default balloon log file with 5M records
java -cp WeatherBalloon.jar DataGen   

//example 2, this command outputs an log file with name balloonLog.txt, containing 1M records, 10 pertentage invalide records, maximumal travel distance of 100KM for each recording, records with temperature between -30 to 40 celsius degree
java -cp WeatherBalloon.jar DataGen -f balloonLog.txt -n 1000000 -r 0.1 -a 100 -l -30 -u 40

//example 3, this command computes the statistic of input file balloonLog.txt. By default it looks a file with name rawDataFromBalloon.txt
java -cp WeatherBalloon.jar Static balloonLog.txt

//example 4, default run of NormalUnit, which tries to load data from rawDataFromBalloon.txt and saves data to normalizedBallonData.txt. All units are convert to km and celsius
java -cp WeatherBalloon.jar NormalUnit

//example 5, this command converts the temperature and distance unit of file balloonLog.txt into mile and fahrenheit and then output the records to file normaliedOutput.txt.
java -cp WeatherBalloon.jar NormalUnit -i balloonLog.txt -o normaliedOutput.txt -d mile -t f